#!/usr/bin/env python3

import pika

def cleanup_queues():
    """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—á–µ—Ä–µ–¥–µ–π –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è"""
    try:
        print("üßπ –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ—á–µ—Ä–µ–¥–∏...")
        
        uri = 'amqp://Tim:AVITOPassw0rd@85.193.95.165:5672/Avito'
        connection = pika.BlockingConnection(pika.URLParameters(uri))
        channel = connection.channel()
        
        queues_to_delete = [
            'avito.messages.incoming',
            'avito.ai.processing', 
            'avito.messages.outgoing',
            'avito.price.calculate',
            'avito.admin.notifications',
            'avito.amocrm.sync'
        ]
        
        for queue_name in queues_to_delete:
            try:
                channel.queue_delete(queue=queue_name)
                print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –æ—á–µ—Ä–µ–¥—å: {queue_name}")
            except Exception as e:
                print(f"  ‚ö†Ô∏è –û—á–µ—Ä–µ–¥—å {queue_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω–∞")
        
        # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –æ—á–µ—Ä–µ–¥–∏ –±–µ–∑ TTL
        print("\nüî® –°–æ–∑–¥–∞–µ–º –æ—á–µ—Ä–µ–¥–∏ –∑–∞–Ω–æ–≤–æ...")
        for queue_name in queues_to_delete:
            channel.queue_declare(queue=queue_name, durable=True)
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –æ—á–µ—Ä–µ–¥—å: {queue_name}")
        
        connection.close()
        print("\nüéâ –í—Å–µ –æ—á–µ—Ä–µ–¥–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π: {e}")
        return False

if __name__ == "__main__":
    cleanup_queues()
