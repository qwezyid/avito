#!/usr/bin/env python3

import pika
import sys

def test_rabbit_connection():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RabbitMQ"""
    try:
        print("üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ RabbitMQ...")
        
        uri = 'amqp://Tim:AVITOPassw0rd@85.193.95.165:5672/Avito'
        connection = pika.BlockingConnection(pika.URLParameters(uri))
        channel = connection.channel()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RabbitMQ —É—Å–ø–µ—à–Ω–æ!")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –æ—á–µ—Ä–µ–¥—å
        test_queue = 'test_queue'
        channel.queue_declare(queue=test_queue, durable=True)
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –æ—á–µ—Ä–µ–¥—å '{test_queue}' —Å–æ–∑–¥–∞–Ω–∞")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        channel.basic_publish(
            exchange='',
            routing_key=test_queue,
            body='Hello RabbitMQ!',
            properties=pika.BasicProperties(delivery_mode=2)
        )
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –æ—á–µ—Ä–µ–¥—å
        channel.queue_delete(queue=test_queue)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –æ—á–µ—Ä–µ–¥—å —É–¥–∞–ª–µ–Ω–∞")
        
        connection.close()
        print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_rabbit_connection()
    if success:
        print("\nüéâ RabbitMQ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å RabbitMQ")
        sys.exit(1)
