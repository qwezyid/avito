#!/usr/bin/env python3

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.core.system_coordinator import system_coordinator
from src.core.rabbitmq_manager import rabbitmq_manager

def test_system_coordinator():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º System Coordinator...")
    
    try:
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
        print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...")
        health = system_coordinator.check_system_health()
        
        print(f"  üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: {health['status']}")
        for service, status in health['services'].items():
            status_icon = "‚úÖ" if status == "healthy" else "‚ùå"
            print(f"  {status_icon} {service}: {status}")
        
        # –¢–µ—Å—Ç 2: –°–∏–º—É–ª—è—Ü–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        print("2Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        
        test_message = {
            'chat_id': 'test_coord_123',
            'text': '–ü—Ä–∏–≤–µ—Ç! –ù—É–∂–Ω–∞ –ø–µ—Ä–µ–≤–æ–∑–∫–∞ –∏–∑ –ú–æ—Å–∫–≤—ã –≤ –°–ü–±',
            'author_id': 12345
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å
        success = rabbitmq_manager.send_message('incoming_messages', test_message)
        if success:
            print("  ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å")
        else:
            print("  ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
            return False
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—á–µ—Ä–µ–¥—è—Ö
        print("3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–µ—Ä–µ–¥–µ–π...")
        
        queue_types = ['incoming_messages', 'ai_processing', 'outgoing_messages']
        for queue_type in queue_types:
            info = rabbitmq_manager.get_queue_info(queue_type)
            if info:
                print(f"  üìä {queue_type}: {info['message_count']} —Å–æ–æ–±—â–µ–Ω–∏–π")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ {queue_type}")
        
        print("\nüéâ –°–∏—Å—Ç–µ–º–Ω—ã–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_system_coordinator()
    if not success:
        sys.exit(1)
